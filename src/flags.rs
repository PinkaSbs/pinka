xflags::xflags! {
    src "src/flags.rs"

    cmd flags {
        /// Launch the nth server from the config file
        optional -s, --server N: usize
        /// Connect to peers
        optional -c, --connect
        /// Launch server in bootstrap mode
        optional --bootstrap
    }
}

// generated start
// The following code is generated by `xflags` macro.
// Run `env UPDATE_XFLAGS=1 cargo build` to regenerate.
#[derive(Debug)]
pub struct Flags {
    pub server: Option<usize>,
    pub connect: bool,
    pub bootstrap: bool,
}

impl Flags {
    #[allow(dead_code)]
    pub fn from_env_or_exit() -> Self {
        Self::from_env_or_exit_()
    }

    #[allow(dead_code)]
    pub fn from_env() -> xflags::Result<Self> {
        Self::from_env_()
    }

    #[allow(dead_code)]
    pub fn from_vec(args: Vec<std::ffi::OsString>) -> xflags::Result<Self> {
        Self::from_vec_(args)
    }
}
// generated end
